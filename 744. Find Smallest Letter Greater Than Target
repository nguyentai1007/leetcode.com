Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.

Letters also wrap around. For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.

Examples:
Input:
letters = ["c", "f", "j"]
target = "a"
Output: "c"

Input:
letters = ["c", "f", "j"]
target = "c"
Output: "f"

C#
public class Solution {
    public char NextGreatestLetter(char[] letters, char target) {
       int i = 0;
            while (letters[i].CompareTo(target) <= 0)
            {
                i++;
                if (i == letters.Length)
                    return letters[0];    
            }
            return letters[i];
    }
}
