Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

C#
public class Solution {
    public string AddStrings(string num1, string num2) {
        int i = num1.Length - 1;
        int j = num2.Length - 1;
        int du = 0, sum = 0;
        string s = null;
        while (i >= 0 || j >= 0) {
            sum = 0;
            if (i >= 0)
                sum = num1[i] - '0';
            if (j >= 0)
                sum += num2[j] - '0';
            sum += du;
            du = sum / 10;
            i--; j--;
            s = String.Concat(sum%10,s);
        }
        if (du > 0)
            s = String.Concat(du,s);
        return s;
    }
}
